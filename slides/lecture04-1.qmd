---
title: "Dissolved Oxygen Simulation"
subtitle: "Lecture 08"
author: "Vivek Srikrishnan"
course: "BEE 4750"
institution: "Cornell University"
date: "September 11, 2023"
format:
    revealjs:
        slide-number: c/t
        show-slide-number: all
        center-title-slide: true
        width: 1280
        height: 720
        transition: none
        toc: true
        toc-depth: 1
        toc-title: "Overview"
        history: false
        link-external-newwindow: true
        theme: ../sass/slides.scss
        footer: "[BEE 4750, Environmental Systems Analysis](https://viveks.me/environmental-systems-analysis)"
        template-partials:
            - title-slide.html
        menu:
            numbers: true
        html-math-method: mathjax
        include-in-header: mathjax-config.html
        date-format: long
        highlight-style: tango
        code-line-numbers: false
julia:
    exeflags: ["+1.10.4"]
execute:
    freeze: auto
---

# Review and Questions

## Last Class

:::: {.columns}
::: {.column width=40%}
- Dissolved Oxygen: essential quantity for aquatic life
- Minimum concentration regulated
- Used mass-balance to derive first-order equation
:::

::: {.column width=60%}

![Processes influencing oxygen balance in moving freshwater](images/do-processes.svg){height=100%}

:::
::::

## DO Concentration Equation

\begin{align} 
\overbrace{U \frac{dC}{dx}}^{\text{Concentration Change}} &= \overbrace{k_a (C_s - C)}^{\text{Reaeration}} + \overbrace{P - R - S_B}^{\text{Constants}} \\[0.5em]
&\quad - \underbrace{k_cB_0\exp\left(\frac{-k_cx}{U}\right)}_{\text{CBOD}} - \underbrace{k_n N_0\exp\left(\frac{-k_nx}{U}\right)}_{\text{NBOD}}
\end{align}

## Questions

{{< include _poll-prompt.qmd >}}

# Dissolved Oxygen Simulation

## Steady-State Mass-Balance Solution

::: {.small-math}
\begin{align}
C(x) &= C_s(1 - \alpha_1) + C_0 \alpha_1 - B_0 \alpha_2 - N_0 \alpha_3 + \left(\frac{P-R-S_B}{k_a}\right) (1-\alpha_1), \\[1em]

\alpha_1 &= \exp\left(-\frac{k_a x}{U}\right) \\[0.25em] 
\alpha_2 &= \left(\frac{k_c}{k_a-k_c}\right)\left[\exp\left(\frac{-k_c x}{U}\right) - \exp\left(\frac{-k_ax}{U}\right)\right] \\[0.25em]
\alpha_3 &= \left(\frac{k_n}{k_a-k_n}\right)\left[\exp\left(\frac{-k_n x}{U}\right) - \exp\left(\frac{-k_ax}{U}\right)\right]
\end{align}
:::

## Steady-State Mass-Balance Solution

\begin{align}
C(x) &= C_s(1 - \alpha_1) + C_0 \alpha_1 - B_0 \alpha_2 - N_0 \alpha_3 \\[0.5em]
& \qquad + \left(\frac{P-R-S_B}{k_a}\right) (1-\alpha_1),
\end{align}

**Note**: Usually, these models ignore $P$, $R$, and $S_B$.

Why do you think that might be?

## Dissolved Oxygen "Sag" Curve

:::: {.columns}
::: {.column width=40%}

Dissolved oxygen concentrations downstream of a waste release "sag" and then start to recover as CBOD and NBOD decrease.

:::
::: {.column width=60%}

{{< embed notebooks/dissolved-oxygen.ipynb#fig-do-single >}}

:::
::::

## How To Simulate

So far, this is only different from our single-box airshed in terms of the number of processes.

Single equation, straightforward to evaluate across many values of $x$ with a loop.

```julia
x = 0:x_step:x_max # array from 0 to x_max in stepsize x_step

C = zeroes(length(x)) # initialize storage
for (i, y) in pairs(x)
    C[i] = dissolved_oxygen(y, parameters)
end
```

## Julia Sidebar: Loop Alternatives

Loops in Julia are fast and should be used freely. 

But there are some more concise alternatives, which may be more readable in some cases.

## Julia Sidebar: Broadcasting

But some more concise alternatives (which may be more readable) include **broadcasting**:

```julia
x = 0:x_step:x_max # array from 0 to x_max in stepsize x_step

# evaluate DO function over every x with fixed parameters
C = (y -> dissolved_oxygen(y, parameters)).(x) 
```

Broadcasting gets finicky over multiple inputs.

## Julia Sidebar: Comprehensions

...And **comprehensions** (in-line for loops, also in Python):

```julia
x = 0:x_step:x_max # array from 0 to x_max in stepsize x_step

# evaluate DO function over every x with fixed parameters
C = [dissolved_oxygen(y, parameters) for y in x]
```

Can "stack" the `for` loops in a comprehension to nest.

## Julia Sidebar: When To Use Loops?

Think about readability and ease of debugging!

- If your code is complex and not wrapped in a function, or you have several nested loops, you should use a loop (*just be careful of scope...*)
- If your code is complex, may be worth asking if you should write a function instead and use broadcasting or a comprehension.


## Single-Discharge Example

| Parameter | River | Waste | General |
|:---------:|:-----:|:-----:|:-------:|
| Volume (m^3^/d)	 		| 100,000 | 10,000  | --- |
| DO (mg/L)           		 	| 6.4 	   | 4.2 	 | --- |
| CBOD	(mg/L)	 		        | 5  		   | 49 	 | --- |
| NBOD	(mg/L)	 		        | 5 	   | 27 | --- |
| $C_s$ (mg/L)                    | ---              | ---         | 7 |
| $k_a$, $k_c$, $k_n$       | ---              | ---         | 0.8, 0.5, 0.4 |   

## Single-Discharge Example: Initial Condition

How do we find the initial state ($x=0$)?

::: {.fragment .fade-in}
Need to compute the mixed concentrations of DO, CBOD, and NBOD ($Q$ is the flow volume):

$$C_0 = C_\text{mixed} = \frac{C_\text{river} \times Q_\text{river} + C_\text{waste} \times Q_\text{waste}}{Q_\text{river} + Q_\text{waste}}$$
:::

## Single-Discharge Example: Initial Condition

So the initial values:

$$C_0 = 6.2 \ \text{mg/L}$$

$$B_0 = 9 \ \text{mg/L}$$

$$N_0 = 7 \ \text{mg/L}$$

## Single-Discharge Example: Simulation

Now we can compute $C(x)$ (river velocity $U = 5$ km/d).

{{< embed notebooks/dissolved-oxygen.ipynb#do-sim >}}

## Single-Discharge Example: Simulation

{{< embed notebooks/dissolved-oxygen.ipynb#fig-do-sim >}}

# Simulating Multiple Discharges

## Multiple Discharges

What happens if we have multiple discharge sites?

![Schematic for Multiple Discharge Example](images/do-multi-release.svg)

## Multiple Discharges

:::: {.columns}
::: {.column width=35%}
Think about this as a multi-box problem:

- **Box 1**: From Release 1 to Release 2
- **Box 2**: From Release 2 to End
:::

::: {.column width=65%}
![Multiple Discharge Boxes](images/do-multi-box.svg)

:::
::::


## Multiple Discharges

:::: {.columns}
::: {.column width=35%}
- Dynamics within each box are like single-release example;
- Make sure to get new initial conditions from relevant outflows!
:::

::: {.column width=65%}
![Multiple Discharge Boxes](images/do-multi-box.svg)

:::
::::

## Multiple Discharges

**Question**: Who would you penalize for lack of compliance?

{{< embed notebooks/dissolved-oxygen.ipynb#fig-do-multi >}}

# Key Points

## Key Points

- Simulation involves running the model over space/time.
- Multiple sections as "multi-box" model: outflows from one box become inflows/initial conditions for another.
- Assigning blame/responsibility in an interdependent system is not straightforward!

## Simulation Framework Overview

![Simulation Workflow Diagram](images/simulation-workflow.svg)

# Upcoming Schedule

## Next Classes

**Wednesday/Friday**: Uncertainty, Risk, and Monte Carlo

## Assessments

- HW1 released today, due 9/22.